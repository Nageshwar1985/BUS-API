server.port = 9000
spring.application.name = bus-api


eureka.instance.hostname=localhost


#management.endpoints.web.exposure.include = '*'
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

        
#resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#resilience4j.circuitbreaker.configs.default.ringBufferSizeInClosedState=4
#resilience4j.circuitbreaker.configs.default.ringBufferSizeInHalfOpenState=2
#resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
#resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
#resilience4j.circuitbreaker.configs.default.recordExceptions= java.util.concurrent.TimeoutException

resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=3
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=2
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10s
resilience4j.circuitbreaker.configs.default.recordExceptions= java.util.concurrent.TimeoutException,java.io.IOException


resilience4j.circuitbreaker.instances.customerCircuitbreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.customerCircuitbreaker.ringBufferSizeInClosedState=4
resilience4j.circuitbreaker.instances.customerCircuitbreaker.ringBufferSizeInHalfOpenState=2
resilience4j.circuitbreaker.instances.customerCircuitbreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.customerCircuitbreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.customerCircuitbreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.customerCircuitbreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.configs.default.recordExceptions= java.util.concurrent.TimeoutException


#resilience4j.circuitbreaker.instances.customer-api.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.customer-api.ringBufferSizeInClosedState=4
#resilience4j.circuitbreaker.instances.customer-api.ringBufferSizeInHalfOpenState=2
#resilience4j.circuitbreaker.instances.customer-api.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.customer-api.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.customer-api.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.customer-api.eventConsumerBufferSize=10
#resilience4j.circuitbreaker.configs.default.recordExceptions= java.util.concurrent.TimeoutException


#resilience4j.circuitbreaker.instances.mycircuitbreaker.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.mycircuitbreaker.ringBufferSizeInClosedState=4
#resilience4j.circuitbreaker.instances.mycircuitbreaker.ringBufferSizeInHalfOpenState=2
#resilience4j.circuitbreaker.instances.mycircuitbreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.mycircuitbreaker.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.mycircuitbreaker.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.mycircuitbreaker.eventConsumerBufferSize=10
#resilience4j.circuitbreaker.configs.default.recordExceptions= java.util.concurrent.TimeoutException


#resilience4j.circuitbreaker.instances.mainService.baseConfig=default

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id = ${spring.application.name}:${spring.application.instance_id:${random.value}}


